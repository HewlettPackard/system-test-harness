#!/usr/bin/env bash

###
### Loads configuration generated by gradle
###

### $resources_dir: Directory with gradle system test resources.
export resources_dir="$(cd $bin_dir/../../../build/resources/systemTest/ ; pwd)"

. $resources_dir/config.sh

### $expanded_productA_simulator : Directory where productA test resources jar is extracted.
expanded_productA_simulator="$BUILD_DIR/libs/productA-systemTest"
# The following version is preferable because it will fail-fast if proper directories are missing.
#expanded_productA_simulator="$(ls -1d $BUILD_DIR/libs/*_productA-systemTest)"

### $expanded_productB_simulator : Directory where productB test resources jar is extracted.
expanded_productB_simulator="$BUILD_DIR/libs/productB-systemTest"
# The following version is preferable because it will fail-fast if proper directories are missing.
#expanded_productB_simulator="$(ls -1d $BUILD_DIR/libs/*_productB-systemTest)"

### $expanded_productC_simulator : Directory where productC test resources jar is extracted.
expanded_productC_simulator="$BUILD_DIR/libs/productC-systemTest"
# The following version is preferable because it will fail-fast if proper directories are missing.
#expanded_productC_simulator="$(ls -1d $BUILD_DIR/libs/*_productC-systemTest)"

# The following reads test configuration files (config.sh) from test archive of each product.
# Notice that some products are primary and IS_XXX and HAS_XXX are loaded from their config files
# while other products could be secondary and only PRODUCTNAME_XXX variables are loaded from
# their configuration file.
#while read line
#do
#	eval $line
#done < <(grep -P "export (PRODUCTA_|IS_|HAS_)" $expanded_productA_simulator/config.sh)
#
#while read line
#do
#	eval $line
#done < <(grep -P "export PRODUCTB_" $expanded_productB_simulator/config.sh)
#
#while read line
#do
#	eval $line
#done < <(grep -P "export (PRODUCTC_|HAS_)" $expanded_productC_simulator/config.sh)
